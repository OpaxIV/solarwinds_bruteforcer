# optimized version of V1
# rather slow, nwo computes some code before entering hot loops - fixed
# hash array were strings, but got compared to integers, resulting in not functioning code - fixed


import string, itertools

# hashes to crack
hashes = [2597124982561782591, 2600364143812063535, 13464308873961738403, 4821863173800309721, 12969190449276002545, 3320026265773918739, 12094027092655598256, 10657751674541025650, 11913842725949116895, 5449730069165757263,
			292198192373389586, 12790084614253405985, 5219431737322569038, 15535773470978271326, 7810436520414958497, 13316211011159594063, 13825071784440082496, 14480775929210717493, 14482658293117931546, 8473756179280619170,
			3778500091710709090, 8799118153397725683, 12027963942392743532, 576626207276463000, 7412338704062093516, 682250828679635420, 13014156621614176974, 18150909006539876521, 10336842116636872171, 12785322942775634499,
			13260224381505715848, 17956969551821596225, 8709004393777297355, 14256853800858727521, 8129411991672431889, 15997665423159927228, 10829648878147112121, 9149947745824492274, 3656637464651387014, 3575761800716667678,
			4501656691368064027, 10296494671777307979, 14630721578341374856, 4088976323439621041, 9531326785919727076, 6461429591783621719, 6508141243778577344, 10235971842993272939, 2478231962306073784, 9903758755917170407,
			14710585101020280896, 14710585101020280896, 13611814135072561278, 2810460305047003196, 2032008861530788751, 27407921587843457, 6491986958834001955, 2128122064571842954, 10484659978517092504, 8478833628889826985,
			10463926208560207521, 7080175711202577138, 8697424601205169055, 7775177810774851294, 16130138450758310172, 506634811745884560, 18294908219222222902, 3588624367609827560, 9555688264681862794, 5415426428750045503,
			3642525650883269872, 13135068273077306806, 3769837838875367802, 191060519014405309, 1682585410644922036, 7878537243757499832, 13799353263187722717, 1367627386496056834, 12574535824074203265, 16990567851129491937,
			8994091295115840290, 13876356431472225791, 14968320160131875803, 14868920869169964081, 106672141413120087, 79089792725215063, 5614586596107908838, 3869935012404164040, 3538022140597504361, 14111374107076822891,
			7982848972385914508, 8760312338504300643, 17351543633914244545, 7516148236133302073, 15114163911481793350, 15457732070353984570, 16292685861617888592, 10374841591685794123, 3045986759481489935, 17109238199226571972,
			6827032273910657891, 5945487981219695001, 8052533790968282297, 17574002783607647274, 3341747963119755850, 14193859431895170587, 17439059603042731363, 17683972236092287897, 700598796416086955, 3660705254426876796,
			12709986806548166638, 3890794756780010537, 2797129108883749491, 3890769468012566366, 14095938998438966337, 11109294216876344399, 1368907909245890092, 11818825521849580123, 8146185202538899243, 2934149816356927366,
			13029357933491444455, 6195833633417633900, 2760663353550280147, 16423314183614230717, 2532538262737333146, 4454255944391929578, 6088115528707848728, 13611051401579634621, 18147627057830191163, 17633734304611248415,
			13581776705111912829, 7175363135479931834, 3178468437029279937, 13599785766252827703, 6180361713414290679, 8612208440357175863, 8408095252303317471]
 
## IMPLEMENTATION ##
 
alphabet = string.ascii_letters     # defines range of values for strings
 
mod64 = 2**64
 
# original function rewritten into python 
def getHash(s):
    num = 14695981039346656037
    byte_var = bytes(s, 'utf-8')                    # all strings are unicode since py 3.x
 
    for b in byte_var:
        num^=  b
        num*= 1099511628211
 
    return (num ^ 0x5BAC903BA7D81967) % mod64       # returns 64-bit values, original code implemented it with "ul" 
 
def bruteForce(n):
    charList = [[*alphabet]] * n                    # create list of lists, n = length of the string
    args = [*charList]                              # used to iterate over char lists
 
    for combination in itertools.product(*args):
        s = "".join([*combination])
        if getHash(s) in hashes:
            print(f"Found string: {s}")
 
def main():
    for i in range(1,10):
        print(f"Searching collisions with string length: {i}")
        bruteForce(i)
        print("-" * 30)
 
if __name__ == "__main__":
    main()
